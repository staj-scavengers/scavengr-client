package edu.cnm.deepdive.scavengrclient.model.entity;

import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.Ignore;
import androidx.room.Index;
import androidx.room.PrimaryKey;
import java.util.LinkedList;
import java.util.List;
import java.util.UUID;
import javax.annotation.Nonnull;

@Entity(
    indices = {
        @Index(value = {"hunt_name"})
    }
)
public class Hunt {

  @ColumnInfo(name = "hunt_id")
  @PrimaryKey() // generated by the server when a hunt is submitted?
  private UUID id;

  @Nonnull
  @ColumnInfo(index = true, defaultValue = "New Hunt", collate = ColumnInfo.NOCASE)
  private String huntName;

  @Nonnull
  private UUID organizerId; // organizer name might be more useful for the client

  @Ignore
  private List<Clue> clues = new LinkedList<>();

  public UUID getId() {
    return id;
  }

  @Nonnull
  public String getHuntName() {
    return huntName;
  }

  public void setHuntName(@Nonnull String huntName) {
    this.huntName = huntName;
  }

  @Nonnull
  public UUID getOrganizerId() {
    return organizerId;
  }

  public void setOrganizerId(@Nonnull UUID organizerId) {
    this.organizerId = organizerId;
  }

  public List<Clue> getClues() {
    return clues;
  }

  public void setClues(List<Clue> clues) {
    this.clues = clues;
  }
}
